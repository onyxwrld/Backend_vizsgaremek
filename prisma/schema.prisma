// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Bicycle {
  id    Int         @id @default(autoincrement())
  type  BicycleType
  price Int
  reservationId Reservation[]
}

model Menu {
  id    Int    @id @default(autoincrement())
  name  String
  type  MenuType
  price Int
  order Order[] 
}

model Order {
  id             Int @id @default(autoincrement())
  total_amount Int //tárolt eljárás
  menu Menu[]
  reservation Reservation? 
}

model Reservation {
  id               Int              @id @default(autoincrement())
  user User @relation(fields: [user_id], references: [id])
  user_id          Int
  bicycle_id       Bicycle[]    
  order_id Int? @unique
  order Order? @relation(fields: [order_id], references: [id])                 
  start_time       DateTime
  reservation_time ReservationTime
  state            ReservationState
}
model Opening{
  id Int @id @default(autoincrement())
  Monday String
  Tesday String
  Wednesday String
  Thursday String
  Friday String
  Sasturday String
  Sunday String
  torzsAdatok TorzsAdatok?
}
model Token{
  token String @id
  userId Int 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
model TorzsAdatok {
  id Int @id @default(autoincrement())
  phone_number  String   
  email         String 
  opening_hours_id Int @unique
  opening Opening @relation(fields: [opening_hours_id],references: [id])
  location      String
  company_id    Int    @unique
  worker User @relation(fields: [company_id], references: [id])
}

model User {
  id         Int    @id @default(autoincrement())
  reservationID Reservation[]
  tokens Token[]
  torzsadatok TorzsAdatok[]
  username   String
  email      String @unique
  password   String @unique
  first_name String
  last_name  String
  role RoleType 
}

enum ReservationTime {
  One
  Three
  Fives
}
enum MenuType {
    Drink
  Snack
}
enum RoleType {
  Admin
  User
}
enum ReservationState {
  Reservation //cancelled
  Pending
  Done
}

enum BicycleType {
  Small
  Medium
  Large
}

 enum EnumState {
  Active
  Passive
}
